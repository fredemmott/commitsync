#!/bin/sh
# Copyright (c) 2020-present, Fred Emmott <fred@fredemmott.com>
# All rights reserved.
#
# This source code is licensed under the ISC license found in the LICENSE file
# in the root directory of this source tree.
#
# ---
#
# Let the user select a branch to checkout
set -e

CC_BIN="$(dirname "$(realpath "$0")")"
function ccgit() {
  "$CC_BIN/cc-git" "$@"
}

echo "Fetching..."
ccgit fetch commitcloud >/dev/null || true
REFS=$(ccgit for-each-ref --format '%(refname)' 'refs/remotes/commitcloud/ccmeta-*' | nl)

tBold=$(tput bold)
tRed=$(tput setaf 1)
tGreen=$(tput setaf 2)
tYellow=$(tput setaf 3)
tCyan=$(tput setaf 6)
tReset=$(tput sgr0)
tCols=$(tput cols)

echo "$REFS" | while read ID REF; do
  if [ -z "$REF" ]; then
    echo "  $(tput setaf 1)No commits yet$(tput sgr0) - $(tput bold)Welcome to CommitCloud!$(tput sgr0)"
    exit 1
  fi
  COMMIT=$(ccgit cat-file blob ${REF}:commit.sha)
  RHS=$(
    printf "%*s" $tCols \
    "$(
      ccgit cat-file commit ${REF} \
      | awk '/author/{print strftime("%Y-%m-%d %X", $(NF-1))}'
    )"
  )
  printf "${tYellow}${tBold}%s${tReset}\r" $tCols "$RHS"
  # Left-aligned ID and branch
  printf "${tBold}%d.${tReset} Branch ${tBold}${tGreen}%s${tReset} ${tCyan}(%s@%s)${tReset}\n" \
    $ID \
    "$(ccgit cat-file blob ${REF}:commit.ref | cut -f3 -d/)" \
    "$(ccgit cat-file blob ${REF}:user)" \
    "$(ccgit cat-file blob ${REF}:hostname | cut -f1 -d.)"
  # History
  BRANCH_POINT=$(ccgit cat-file blob ${REF}:upstream.sha)
  git log \
    --graph \
    "--format=${tYellow}%h${tReset}%<|($(($tCols - 2)),trunc) %s" \
    $BRANCH_POINT..$COMMIT \
    | sed 's/^/  /'
done
